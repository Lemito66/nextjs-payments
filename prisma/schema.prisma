generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int        @id @default(autoincrement())
  name                 String
  last_name            String
  email                String     @unique
  password             String
  confirmed_email      Boolean?   @default(false)
  role                 String?    @default("user") // admin
  created_at           DateTime   @default(now())
  products             Product[]
  orders               Order[]
  Payments             Payments[]

  
  subscriptionProvider String? // stripe, paypal, mercadopago
  subscriptionId String? // id de la suscripcion en stripe, paypal, mercadopago //1
  status         String? // ACTIVE, CANCELLED, PENDING 
  startedAt      DateTime? // fecha de inicio de la suscripcion

  userSubscriptionId Int?
  // userSubscription   UsersSubscriptions @relation(fields: [userSubscriptionId], references: [id])
}

// model UsersSubscriptions {
//   id             Int      @id @default(autoincrement())
//   subscriptionId String // id de la suscripcion en stripe, paypal, mercadopago
//   created_at     DateTime @default(now())
//   status         String // ACTIVE, CANCELLED, PENDING

//   payerId Int
//   // payer   User @relation(fields: [payerId], references: [id])
// }

// model UsersPlans 

model SubscriptionPlan { // 1 - I-123123123123
  id          Int      @id @default(autoincrement())
  name        String // basico, premium, gold
  description String
  price       Float // 
  created_at  DateTime @default(now())

  // users User[]
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  created_at  DateTime @default(now())

  products ProductCategory[]
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  price       Float
  description String?
  stock       Int?    @default(0)
  image       String?
  slug        String? @unique @default(cuid())
  authorId    Int
  author      User    @relation(fields: [authorId], references: [id])

  created_at DateTime @default(now())

  categories ProductCategory[]

  orders       Order[]
  orderDetails OrderDetails[]
}

model ProductCategory {
  id Int @id @default(autoincrement())

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
}

model Payments {
  id     Int   @id @default(autoincrement())
  total  Float
  user   User  @relation(fields: [userId], references: [id]) // usuario del sistema
  userId Int

  order   Order? @relation(fields: [orderId], references: [id])
  orderId Int? // id de la orden de stripe y paypal
  paymentId Int? // id de pago de mercadopago
  provider String // stripe, paypal, mercadopago

  created_at DateTime @default(now())
}

model Order {
  id         Int      @id @default(autoincrement())
  total      Float
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  created_at DateTime @default(now())

  products     Product[]
  payments     Payments[]
  orderDetails OrderDetails[]
}

model OrderDetails {
  id         Int      @id @default(autoincrement())
  quantity   Int
  price      Float
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    Int
  created_at DateTime @default(now())
}
